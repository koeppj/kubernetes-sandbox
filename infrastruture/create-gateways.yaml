#
# Create the Envoy GatewayClass and two Gateways
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: eg
  namespace: infrastructure
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
#
# This gateway watched by k8s_gateway so localnet IPs available via local network
# DNS
#
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: koeppster-lan-gateway
  namespace: infrastructure
spec:
  gatewayClassName: eg
  listeners:
    - name: http
      hostname: "*.k8s.koeppster.lan"
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: All
  addresses:
    - type: IPAddress
      value: 192.168.1.244
---
#
# This gateway used for http routes accessed via port forward from outside local network
# with public IPs
#
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: johnkoepp-com-gateway
  namespace: infrastructure
spec:
  gatewayClassName: eg
  infrastructure:
    parametersRef:
      group: gateway.envoyproxy.io
      kind: EnvoyProxy
      name: envoy-proxy-patch
  listeners:
    - name: http
      hostname: "*.johnkoepp.com"
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: All
    - name: https
      hostname: "*.johnkoepp.com"
      port: 443
      protocol: HTTPS
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - name: johnkoepp-com-tls
            namespace: infrastructure
  addresses:
    - type: IPAddress
      value: 192.168.1.246
